// Auto-generated by command api_parser.exe

function API_Definition*
custom_api_construct(Arena *arena){
API_Definition *result = begin_api(arena, "custom");
{
API_Call *call = api_call_with_location(arena, result, strlit("global_set_setting"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Global_Setting_ID", "setting");
api_param(arena, call, "i64", "value");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("global_get_screen_rectangle"), strlit("rect2"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("create_child_process"), strlit("Child_Process_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "String", "path");
api_param(arena, call, "String", "command");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("child_process_set_target_buffer"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Child_Process_ID", "child_process_id");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Child_Process_Set_Target_Flags", "flags");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_get_attached_child_process"), strlit("Child_Process_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("child_process_get_attached_buffer"), strlit("Buffer_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Child_Process_ID", "child_process_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("child_process_get_state"), strlit("Process_State"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Child_Process_ID", "child_process_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("enqueue_virtual_event"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Input_Event*", "event");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_buffer_count"), strlit("i32"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_buffer_next"), strlit("Buffer_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Access_Flag", "access");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_buffer_by_name"), strlit("Buffer_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "String8", "name");
api_param(arena, call, "Access_Flag", "access");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_buffer_by_filename"), strlit("Buffer_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "String", "filename");
api_param(arena, call, "Access_Flag", "access");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_read_range"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Range_i64", "range");
api_param(arena, call, "u8*", "out");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_replace_range"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Range_i64", "range");
api_param(arena, call, "String", "string");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_batch_edit"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Batch_Edit*", "batch");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_seek_string"), strlit("String_Match"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer");
api_param(arena, call, "String8", "needle");
api_param(arena, call, "Scan_Direction", "direction");
api_param(arena, call, "i64", "start_pos");
api_param(arena, call, "b32", "case_sensitive");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_seek_character_class"), strlit("String_Match"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer");
api_param(arena, call, "Character_Predicate*", "predicate");
api_param(arena, call, "Scan_Direction", "direction");
api_param(arena, call, "i64", "start_pos");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_line_y_difference"), strlit("f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "f32", "width");
api_param(arena, call, "Face_ID", "face_id");
api_param(arena, call, "i64", "line_a");
api_param(arena, call, "i64", "line_b");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_line_shift_y"), strlit("Line_Shift_Vertical"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "f32", "width");
api_param(arena, call, "Face_ID", "face_id");
api_param(arena, call, "i64", "line");
api_param(arena, call, "f32", "y_shift");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_pos_at_relative_xy"), strlit("i64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "f32", "width");
api_param(arena, call, "Face_ID", "face_id");
api_param(arena, call, "i64", "base_line");
api_param(arena, call, "Vec2_f32", "relative_xy");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_relative_box_of_pos"), strlit("Rect_f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "f32", "width");
api_param(arena, call, "Face_ID", "face_id");
api_param(arena, call, "i64", "base_line");
api_param(arena, call, "i64", "pos");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_padded_box_of_pos"), strlit("Rect_f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "f32", "width");
api_param(arena, call, "Face_ID", "face_id");
api_param(arena, call, "i64", "base_line");
api_param(arena, call, "i64", "pos");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_relative_character_from_pos"), strlit("i64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "f32", "width");
api_param(arena, call, "Face_ID", "face_id");
api_param(arena, call, "i64", "base_line");
api_param(arena, call, "i64", "pos");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_pos_from_relative_character"), strlit("i64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "f32", "width");
api_param(arena, call, "Face_ID", "face_id");
api_param(arena, call, "i64", "base_line");
api_param(arena, call, "i64", "relative_character");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_line_y_difference"), strlit("f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "i64", "line_a");
api_param(arena, call, "i64", "line_b");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_line_shift_y"), strlit("Line_Shift_Vertical"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "i64", "line");
api_param(arena, call, "f32", "y_shift");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_pos_at_relative_xy"), strlit("i64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "i64", "base_line");
api_param(arena, call, "Vec2_f32", "relative_xy");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_relative_box_of_pos"), strlit("Rect_f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "i64", "base_line");
api_param(arena, call, "i64", "pos");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_padded_box_of_pos"), strlit("Rect_f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "i64", "base_line");
api_param(arena, call, "i64", "pos");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_relative_character_from_pos"), strlit("i64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "i64", "base_line");
api_param(arena, call, "i64", "pos");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_pos_from_relative_character"), strlit("i64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "i64", "base_line");
api_param(arena, call, "i64", "character");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_exists"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_get_access_flags"), strlit("Access_Flag"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_get_size"), strlit("i64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_get_line_count"), strlit("i64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("push_buffer_base_name"), strlit("String8"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Arena*", "arena");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("push_buffer_unique_name"), strlit("String"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Arena*", "out");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("push_buffer_filename"), strlit("String"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Arena*", "arena");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_get_dirty_state"), strlit("Dirty_State"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_set_dirty_state"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Dirty_State", "dirty_state");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_set_layout"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Layout_Function*", "layout_func");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_clear_layout_cache"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_get_layout"), strlit("Layout_Function*"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_get_setting"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Buffer_Setting_ID", "setting");
api_param(arena, call, "i64*", "value_out");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_set_setting"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Buffer_Setting_ID", "setting");
api_param(arena, call, "i64", "value");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_get_managed_scope"), strlit("Managed_Scope"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_send_end_signal"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("create_buffer"), strlit("Buffer_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "String", "filename");
api_param(arena, call, "Buffer_Create_Flag", "flags");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_save"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "String", "filename");
api_param(arena, call, "Buffer_Save_Flag", "flags");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_kill"), strlit("Buffer_Kill_Result"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Buffer_Kill_Flag", "flags");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_reopen"), strlit("Buffer_Reopen_Result"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Buffer_Reopen_Flag", "flags");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_get_file_attributes"), strlit("File_Attributes"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_view_next"), strlit("View_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Access_Flag", "access");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_view_prev"), strlit("View_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Access_Flag", "access");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_this_ctx_view"), strlit("View_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Access_Flag", "access");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_exists"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_get_buffer"), strlit("Buffer_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Access_Flag", "access");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_get_cursor_pos"), strlit("i64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_get_mark_pos"), strlit("i64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_get_preferred_x"), strlit("f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_set_preferred_x"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "f32", "x");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_get_screen_rect"), strlit("Rect_f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_get_panel"), strlit("Panel_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("panel_get_view"), strlit("View_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Panel_ID", "panel_id");
api_param(arena, call, "Access_Flag", "access");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("panel_is_split"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Panel_ID", "panel_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("panel_is_leaf"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Panel_ID", "panel_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("panel_split"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Panel_ID", "panel_id");
api_param(arena, call, "Dimension", "split_dim");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("panel_set_split"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Panel_ID", "panel_id");
api_param(arena, call, "Panel_Split_Kind", "kind");
api_param(arena, call, "f32", "t");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("panel_swap_children"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Panel_ID", "panel_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("panel_get_root"), strlit("Panel_ID"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("panel_get_parent"), strlit("Panel_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Panel_ID", "panel_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("panel_get_child"), strlit("Panel_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Panel_ID", "panel_id");
api_param(arena, call, "Side", "which_child");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_close"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_get_buffer_region"), strlit("Rect_f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_get_buffer_scroll"), strlit("Buffer_Scroll"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_set_active"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_enqueue_command_function"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Custom_Command_Function*", "custom_func");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_get_setting"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "View_Setting_ID", "setting");
api_param(arena, call, "i64*", "value_out");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_set_setting"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "View_Setting_ID", "setting");
api_param(arena, call, "i64", "value");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_get_managed_scope"), strlit("Managed_Scope"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_compute_cursor"), strlit("Buffer_Cursor"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer");
api_param(arena, call, "Buffer_Seek", "seek");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_compute_cursor"), strlit("Buffer_Cursor"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Buffer_Seek", "seek");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_set_camera_bounds"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Vec2_f32", "margin");
api_param(arena, call, "Vec2_f32", "push_in_multiplier");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_get_camera_bounds"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Vec2_f32*", "margin");
api_param(arena, call, "Vec2_f32*", "push_in_multiplier");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_set_cursor"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Buffer_Seek", "seek");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_set_buffer_scroll"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Buffer_Scroll", "scroll");
api_param(arena, call, "Set_Buffer_Scroll_Rule", "rule");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_set_mark"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Buffer_Seek", "seek");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_quit_ui"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_set_buffer"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Set_Buffer_Flag", "flags");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_push_context"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "View_Context*", "ctx");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_pop_context"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_alter_context"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "View_Context*", "ctx");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_current_context"), strlit("View_Context"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("view_current_context_hook_memory"), strlit("String"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "Hook_ID", "hook_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("create_user_managed_scope"), strlit("Managed_Scope"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("destroy_user_managed_scope"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Scope", "scope");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_global_managed_scope"), strlit("Managed_Scope"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_managed_scope_with_multiple_dependencies"), strlit("Managed_Scope"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Scope*", "scopes");
api_param(arena, call, "i32", "count");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_scope_clear_contents"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Scope", "scope");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_scope_clear_self_all_dependent_scopes"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Scope", "scope");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_scope_allocator"), strlit("Base_Allocator*"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Scope", "scope");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_id_group_highest_id"), strlit("u64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "String", "group");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_id_declare"), strlit("Managed_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "String", "group");
api_param(arena, call, "String", "name");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_id_get"), strlit("Managed_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "String", "group");
api_param(arena, call, "String", "name");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_scope_get_attachment"), strlit("void*"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Scope", "scope");
api_param(arena, call, "Managed_ID", "id");
api_param(arena, call, "u64", "size");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_scope_attachment_erase"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Scope", "scope");
api_param(arena, call, "Managed_ID", "id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("alloc_managed_memory_in_scope"), strlit("Managed_Object"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Scope", "scope");
api_param(arena, call, "i32", "item_size");
api_param(arena, call, "i32", "count");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("alloc_buffer_markers_on_buffer"), strlit("Managed_Object"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "i32", "count");
api_param(arena, call, "Managed_Scope*", "optional_extra_scope");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_object_get_item_size"), strlit("u32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Object", "object");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_object_get_item_count"), strlit("u32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Object", "object");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_object_get_pointer"), strlit("void*"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Object", "object");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_object_get_type"), strlit("Managed_Prim_Type"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Object", "object");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_object_get_containing_scope"), strlit("Managed_Scope"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Object", "object");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_object_free"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Object", "object");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_object_store_data"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Object", "object");
api_param(arena, call, "u32", "first_index");
api_param(arena, call, "u32", "count");
api_param(arena, call, "void*", "mem");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("managed_object_load_data"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Managed_Object", "object");
api_param(arena, call, "u32", "first_index");
api_param(arena, call, "u32", "count");
api_param(arena, call, "void*", "mem_out");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_next_input_raw"), strlit("User_Input"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_current_input_sequence_number"), strlit("i64"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_current_input"), strlit("User_Input"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("set_current_input"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "User_Input*", "input");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("leave_current_input_unhandled"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("set_custom_hook"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Hook_ID", "hook_id");
api_param(arena, call, "Void_Func*", "func_ptr");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_custom_hook"), strlit("Void_Func*"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Hook_ID", "hook_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("set_custom_hook_memory_size"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Hook_ID", "hook_id");
api_param(arena, call, "u64", "size");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_mouse_state"), strlit("Mouse_State"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_active_query_bars"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
api_param(arena, call, "i32", "max_result_count");
api_param(arena, call, "Query_Bar_Ptr_Array*", "array_out");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("start_query_bar"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Query_Bar*", "bar");
api_param(arena, call, "u32", "flags");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("end_query_bar"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Query_Bar*", "bar");
api_param(arena, call, "u32", "flags");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("clear_all_query_bars"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "View_ID", "view_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("log_string"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "String", "str");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_largest_face_id"), strlit("Face_ID"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("set_global_face"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Face_ID", "id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_history_get_max_record_index"), strlit("History_Record_Index"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_history_get_record_info"), strlit("Record_Info"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "History_Record_Index", "index");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_history_get_group_sub_record"), strlit("Record_Info"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "History_Record_Index", "index");
api_param(arena, call, "i32", "sub_index");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_history_get_current_state_index"), strlit("History_Record_Index"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_history_set_current_state_index"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "History_Record_Index", "index");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_history_merge_record_range"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "History_Record_Index", "first_index");
api_param(arena, call, "History_Record_Index", "last_index");
api_param(arena, call, "Record_Merge_Flag", "flags");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_history_clear_after_current_state"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("global_history_edit_group_begin"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("global_history_edit_group_end"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_set_face"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Face_ID", "id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_face_description"), strlit("Face_Description"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Face_ID", "face_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_face_metrics"), strlit("Face_Metrics"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Face_ID", "face_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_face_advance_map"), strlit("Face_Advance_Map"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Face_ID", "face_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_face_id"), strlit("Face_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("try_create_new_face"), strlit("Face_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Face_Description*", "description");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("try_modify_face"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Face_ID", "id");
api_param(arena, call, "Face_Description*", "description");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("try_release_face"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Face_ID", "id");
api_param(arena, call, "Face_ID", "replacement_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("push_hot_directory"), strlit("String8"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Arena*", "arena");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("set_hot_directory"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "String8", "string");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("send_exit_signal"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("hard_exit"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("set_window_title"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "String8", "title");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("acquire_global_frame_mutex"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("release_global_frame_mutex"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("draw_string_oriented"), strlit("v2"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Face_ID", "font_id");
api_param(arena, call, "ARGB_Color", "color");
api_param(arena, call, "String8", "str");
api_param(arena, call, "v2", "point");
api_param(arena, call, "u32", "flags");
api_param(arena, call, "v2", "delta");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_string_advance"), strlit("f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Face_ID", "font_id");
api_param(arena, call, "String", "str");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("draw_set_clip"), strlit("Rect_f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Rect_f32", "new_clip");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("text_layout_create"), strlit("Text_Layout_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Buffer_ID", "buffer_id");
api_param(arena, call, "Rect_f32", "rect");
api_param(arena, call, "Buffer_Point", "buffer_point");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("text_layout_region"), strlit("Rect_f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Text_Layout_ID", "text_layout_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("text_layout_get_buffer"), strlit("Buffer_ID"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Text_Layout_ID", "text_layout_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("text_layout_get_visible_range"), strlit("Range_i64"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Text_Layout_ID", "text_layout_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("text_layout_line_on_screen"), strlit("Range_f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Text_Layout_ID", "layout_id");
api_param(arena, call, "i64", "line_number");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("text_layout_character_on_screen"), strlit("Rect_f32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Text_Layout_ID", "layout_id");
api_param(arena, call, "i64", "pos");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("paint_text_color"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Text_Layout_ID", "layout_id");
api_param(arena, call, "Range_i64", "range");
api_param(arena, call, "ARGB_Color", "color");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("paint_text_color_blend"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Text_Layout_ID", "layout_id");
api_param(arena, call, "Range_i64", "range");
api_param(arena, call, "ARGB_Color", "color");
api_param(arena, call, "f32", "blend");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("text_layout_free"), strlit("b32"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Text_Layout_ID", "text_layout_id");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("draw_text_layout"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Text_Layout_ID", "layout_id");
api_param(arena, call, "ARGB_Color", "special_color");
api_param(arena, call, "ARGB_Color", "ghost_color");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("open_color_picker"), strlit("void"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Color_Picker*", "picker");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("buffer_find_all_matches"), strlit("String_Match_List"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Arena*", "arena");
api_param(arena, call, "Buffer_ID", "buffer");
api_param(arena, call, "i32", "string_id");
api_param(arena, call, "Range_i64", "range");
api_param(arena, call, "String", "needle");
api_param(arena, call, "Character_Predicate*", "predicate");
api_param(arena, call, "Scan_Direction", "direction");
api_param(arena, call, "b32", "case_sensitive");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_core_profile_list"), strlit("Profile_Global_List*"), strlit(""));
api_param(arena, call, "App*", "app");
}
{
API_Call *call = api_call_with_location(arena, result, strlit("get_custom_layer_boundary_docs"), strlit("Doc_Cluster*"), strlit(""));
api_param(arena, call, "App*", "app");
api_param(arena, call, "Arena*", "arena");
}
return(result);
}
